<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hexo相关知识]]></title>
    <url>%2F2017%2F09%2F09%2Fhexo%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%2F</url>
    <content type="text"><![CDATA[本文是在安装好hexo,配置好github pages后做的相关说明注：要看从头到尾的安装可以看 使用hexo+github搭建免费个人博客详细教程 一 : hexo相关指令查看相关链接 https://segmentfault.com/a/1190000002632530 二 : hexo所在位置 我安装在了D:\hexo目录下。 三 : 更换主题 我选择了主题 hexo-theme-next。clone下来(不需要进入themes目录再clone,这里clone后,顺便把文件夹名hexo-theme-next改成了next)1git clone https://github.com/iissnan/hexo-theme-next themes/next 下载后,修改_config.yml中的theme: landscape改为theme: next，然后重新执行命令hexo g(即hexo generate #使用 Hexo 生成静态文件快速而且简单)来重新生成。注：hexo g生成了public目录，这个目录里面的内容就是最终hexo d后上传到github上的东西，也就是博客的所有内容，包括文章； 如果要本地预览，则可以使用命令hexo server(hexo s),如果运行后没反应，可能是端口被占用了，用命令hexo server -p 端口号。一切顺利后，则使用命令hexo d(即hexo deploy),提交部署到github后，CNAME所指定的域名即可。 四 : 发文章 使用命令hexo n 文章名(即hexo n 文章名)即在目录hexo\source\_posts\下生成了相应的文章名字。(我们发现,其实这个目录以及themes目录下的相应主题文件，在使用hexo g时共同生成了public目录) 如果使用hexo new page &quot;pageName&quot;表示新建页面，访问路径时用http://localhost:5000/pageName/形式的路径。 总结来说就三条： hexo n #写文章 hexo g #生成 hexo d #部署 #可与hexo g合并为 hexo d -g 五 : hexo主题插件的配置附：1：Markdown 语法手册 ( 完整整理版 )]]></content>
      <categories>
        <category>技术知识点</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>知识点</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F06%2F10%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
